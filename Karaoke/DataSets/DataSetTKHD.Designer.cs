//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5448
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Karaoke.DataSets {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSetTKHD")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSetTKHD : global::System.Data.DataSet {
        
        private HoadonXuatDataTable tableHoadonXuat;
        
        private ChitietHDXuatDataTable tableChitietHDXuat;
        
        private HeaderDataDataTable tableHeaderData;
        
        private global::System.Data.DataRelation relationHoadonXuat_ChitietHDXuat;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DataSetTKHD() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DataSetTKHD(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["HoadonXuat"] != null)) {
                    base.Tables.Add(new HoadonXuatDataTable(ds.Tables["HoadonXuat"]));
                }
                if ((ds.Tables["ChitietHDXuat"] != null)) {
                    base.Tables.Add(new ChitietHDXuatDataTable(ds.Tables["ChitietHDXuat"]));
                }
                if ((ds.Tables["HeaderData"] != null)) {
                    base.Tables.Add(new HeaderDataDataTable(ds.Tables["HeaderData"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HoadonXuatDataTable HoadonXuat {
            get {
                return this.tableHoadonXuat;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ChitietHDXuatDataTable ChitietHDXuat {
            get {
                return this.tableChitietHDXuat;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HeaderDataDataTable HeaderData {
            get {
                return this.tableHeaderData;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DataSetTKHD cln = ((DataSetTKHD)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["HoadonXuat"] != null)) {
                    base.Tables.Add(new HoadonXuatDataTable(ds.Tables["HoadonXuat"]));
                }
                if ((ds.Tables["ChitietHDXuat"] != null)) {
                    base.Tables.Add(new ChitietHDXuatDataTable(ds.Tables["ChitietHDXuat"]));
                }
                if ((ds.Tables["HeaderData"] != null)) {
                    base.Tables.Add(new HeaderDataDataTable(ds.Tables["HeaderData"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableHoadonXuat = ((HoadonXuatDataTable)(base.Tables["HoadonXuat"]));
            if ((initTable == true)) {
                if ((this.tableHoadonXuat != null)) {
                    this.tableHoadonXuat.InitVars();
                }
            }
            this.tableChitietHDXuat = ((ChitietHDXuatDataTable)(base.Tables["ChitietHDXuat"]));
            if ((initTable == true)) {
                if ((this.tableChitietHDXuat != null)) {
                    this.tableChitietHDXuat.InitVars();
                }
            }
            this.tableHeaderData = ((HeaderDataDataTable)(base.Tables["HeaderData"]));
            if ((initTable == true)) {
                if ((this.tableHeaderData != null)) {
                    this.tableHeaderData.InitVars();
                }
            }
            this.relationHoadonXuat_ChitietHDXuat = this.Relations["HoadonXuat_ChitietHDXuat"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DataSetTKHD";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSetTKHD.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableHoadonXuat = new HoadonXuatDataTable();
            base.Tables.Add(this.tableHoadonXuat);
            this.tableChitietHDXuat = new ChitietHDXuatDataTable();
            base.Tables.Add(this.tableChitietHDXuat);
            this.tableHeaderData = new HeaderDataDataTable();
            base.Tables.Add(this.tableHeaderData);
            this.relationHoadonXuat_ChitietHDXuat = new global::System.Data.DataRelation("HoadonXuat_ChitietHDXuat", new global::System.Data.DataColumn[] {
                        this.tableHoadonXuat.IDHoadonXuatColumn}, new global::System.Data.DataColumn[] {
                        this.tableChitietHDXuat.IDHoadonXuatColumn}, false);
            this.Relations.Add(this.relationHoadonXuat_ChitietHDXuat);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeHoadonXuat() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeChitietHDXuat() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeHeaderData() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSetTKHD ds = new DataSetTKHD();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void HoadonXuatRowChangeEventHandler(object sender, HoadonXuatRowChangeEvent e);
        
        public delegate void ChitietHDXuatRowChangeEventHandler(object sender, ChitietHDXuatRowChangeEvent e);
        
        public delegate void HeaderDataRowChangeEventHandler(object sender, HeaderDataRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HoadonXuatDataTable : global::System.Data.TypedTableBase<HoadonXuatRow> {
            
            private global::System.Data.DataColumn columnIDHoadonXuat;
            
            private global::System.Data.DataColumn columnNgayxuat;
            
            private global::System.Data.DataColumn columnTen;
            
            private global::System.Data.DataColumn columnPhuthu;
            
            private global::System.Data.DataColumn columnTenPhong;
            
            private global::System.Data.DataColumn columnGioBD;
            
            private global::System.Data.DataColumn columnGioKT;
            
            private global::System.Data.DataColumn columnGia;
            
            private global::System.Data.DataColumn columnGhichu;
            
            private global::System.Data.DataColumn columnGiam;
            
            private global::System.Data.DataColumn columnThue;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HoadonXuatDataTable() {
                this.TableName = "HoadonXuat";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HoadonXuatDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected HoadonXuatDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDHoadonXuatColumn {
                get {
                    return this.columnIDHoadonXuat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NgayxuatColumn {
                get {
                    return this.columnNgayxuat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TenColumn {
                get {
                    return this.columnTen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhuthuColumn {
                get {
                    return this.columnPhuthu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TenPhongColumn {
                get {
                    return this.columnTenPhong;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GioBDColumn {
                get {
                    return this.columnGioBD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GioKTColumn {
                get {
                    return this.columnGioKT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GiaColumn {
                get {
                    return this.columnGia;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GhichuColumn {
                get {
                    return this.columnGhichu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GiamColumn {
                get {
                    return this.columnGiam;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ThueColumn {
                get {
                    return this.columnThue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HoadonXuatRow this[int index] {
                get {
                    return ((HoadonXuatRow)(this.Rows[index]));
                }
            }
            
            public event HoadonXuatRowChangeEventHandler HoadonXuatRowChanging;
            
            public event HoadonXuatRowChangeEventHandler HoadonXuatRowChanged;
            
            public event HoadonXuatRowChangeEventHandler HoadonXuatRowDeleting;
            
            public event HoadonXuatRowChangeEventHandler HoadonXuatRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddHoadonXuatRow(HoadonXuatRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HoadonXuatRow AddHoadonXuatRow(int IDHoadonXuat, string Ngayxuat, string Ten, string Phuthu, string TenPhong, string GioBD, string GioKT, string Gia, string Ghichu, string Giam, string Thue) {
                HoadonXuatRow rowHoadonXuatRow = ((HoadonXuatRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        IDHoadonXuat,
                        Ngayxuat,
                        Ten,
                        Phuthu,
                        TenPhong,
                        GioBD,
                        GioKT,
                        Gia,
                        Ghichu,
                        Giam,
                        Thue};
                rowHoadonXuatRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowHoadonXuatRow);
                return rowHoadonXuatRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                HoadonXuatDataTable cln = ((HoadonXuatDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new HoadonXuatDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnIDHoadonXuat = base.Columns["IDHoadonXuat"];
                this.columnNgayxuat = base.Columns["Ngayxuat"];
                this.columnTen = base.Columns["Ten"];
                this.columnPhuthu = base.Columns["Phuthu"];
                this.columnTenPhong = base.Columns["TenPhong"];
                this.columnGioBD = base.Columns["GioBD"];
                this.columnGioKT = base.Columns["GioKT"];
                this.columnGia = base.Columns["Gia"];
                this.columnGhichu = base.Columns["Ghichu"];
                this.columnGiam = base.Columns["Giam"];
                this.columnThue = base.Columns["Thue"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnIDHoadonXuat = new global::System.Data.DataColumn("IDHoadonXuat", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDHoadonXuat);
                this.columnNgayxuat = new global::System.Data.DataColumn("Ngayxuat", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNgayxuat);
                this.columnTen = new global::System.Data.DataColumn("Ten", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTen);
                this.columnPhuthu = new global::System.Data.DataColumn("Phuthu", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhuthu);
                this.columnTenPhong = new global::System.Data.DataColumn("TenPhong", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTenPhong);
                this.columnGioBD = new global::System.Data.DataColumn("GioBD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGioBD);
                this.columnGioKT = new global::System.Data.DataColumn("GioKT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGioKT);
                this.columnGia = new global::System.Data.DataColumn("Gia", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGia);
                this.columnGhichu = new global::System.Data.DataColumn("Ghichu", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGhichu);
                this.columnGiam = new global::System.Data.DataColumn("Giam", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGiam);
                this.columnThue = new global::System.Data.DataColumn("Thue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThue);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HoadonXuatRow NewHoadonXuatRow() {
                return ((HoadonXuatRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new HoadonXuatRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(HoadonXuatRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.HoadonXuatRowChanged != null)) {
                    this.HoadonXuatRowChanged(this, new HoadonXuatRowChangeEvent(((HoadonXuatRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.HoadonXuatRowChanging != null)) {
                    this.HoadonXuatRowChanging(this, new HoadonXuatRowChangeEvent(((HoadonXuatRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.HoadonXuatRowDeleted != null)) {
                    this.HoadonXuatRowDeleted(this, new HoadonXuatRowChangeEvent(((HoadonXuatRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.HoadonXuatRowDeleting != null)) {
                    this.HoadonXuatRowDeleting(this, new HoadonXuatRowChangeEvent(((HoadonXuatRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveHoadonXuatRow(HoadonXuatRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetTKHD ds = new DataSetTKHD();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HoadonXuatDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ChitietHDXuatDataTable : global::System.Data.TypedTableBase<ChitietHDXuatRow> {
            
            private global::System.Data.DataColumn columnIDHoadonXuat;
            
            private global::System.Data.DataColumn columnIDChitietHDXuat;
            
            private global::System.Data.DataColumn columnIDSanpham;
            
            private global::System.Data.DataColumn columnTenSanPham;
            
            private global::System.Data.DataColumn columnDVT;
            
            private global::System.Data.DataColumn columnSoluong;
            
            private global::System.Data.DataColumn columnGia;
            
            private global::System.Data.DataColumn columnGiam;
            
            private global::System.Data.DataColumn columnThanhtien;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ChitietHDXuatDataTable() {
                this.TableName = "ChitietHDXuat";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ChitietHDXuatDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ChitietHDXuatDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDHoadonXuatColumn {
                get {
                    return this.columnIDHoadonXuat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDChitietHDXuatColumn {
                get {
                    return this.columnIDChitietHDXuat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDSanphamColumn {
                get {
                    return this.columnIDSanpham;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TenSanPhamColumn {
                get {
                    return this.columnTenSanPham;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DVTColumn {
                get {
                    return this.columnDVT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SoluongColumn {
                get {
                    return this.columnSoluong;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GiaColumn {
                get {
                    return this.columnGia;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GiamColumn {
                get {
                    return this.columnGiam;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ThanhtienColumn {
                get {
                    return this.columnThanhtien;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ChitietHDXuatRow this[int index] {
                get {
                    return ((ChitietHDXuatRow)(this.Rows[index]));
                }
            }
            
            public event ChitietHDXuatRowChangeEventHandler ChitietHDXuatRowChanging;
            
            public event ChitietHDXuatRowChangeEventHandler ChitietHDXuatRowChanged;
            
            public event ChitietHDXuatRowChangeEventHandler ChitietHDXuatRowDeleting;
            
            public event ChitietHDXuatRowChangeEventHandler ChitietHDXuatRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddChitietHDXuatRow(ChitietHDXuatRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ChitietHDXuatRow AddChitietHDXuatRow(HoadonXuatRow parentHoadonXuatRowByHoadonXuat_ChitietHDXuat, string IDChitietHDXuat, string IDSanpham, string TenSanPham, string DVT, string Soluong, string Gia, string Giam, string Thanhtien) {
                ChitietHDXuatRow rowChitietHDXuatRow = ((ChitietHDXuatRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        IDChitietHDXuat,
                        IDSanpham,
                        TenSanPham,
                        DVT,
                        Soluong,
                        Gia,
                        Giam,
                        Thanhtien};
                if ((parentHoadonXuatRowByHoadonXuat_ChitietHDXuat != null)) {
                    columnValuesArray[0] = parentHoadonXuatRowByHoadonXuat_ChitietHDXuat[0];
                }
                rowChitietHDXuatRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowChitietHDXuatRow);
                return rowChitietHDXuatRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ChitietHDXuatDataTable cln = ((ChitietHDXuatDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ChitietHDXuatDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnIDHoadonXuat = base.Columns["IDHoadonXuat"];
                this.columnIDChitietHDXuat = base.Columns["IDChitietHDXuat"];
                this.columnIDSanpham = base.Columns["IDSanpham"];
                this.columnTenSanPham = base.Columns["TenSanPham"];
                this.columnDVT = base.Columns["DVT"];
                this.columnSoluong = base.Columns["Soluong"];
                this.columnGia = base.Columns["Gia"];
                this.columnGiam = base.Columns["Giam"];
                this.columnThanhtien = base.Columns["Thanhtien"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnIDHoadonXuat = new global::System.Data.DataColumn("IDHoadonXuat", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDHoadonXuat);
                this.columnIDChitietHDXuat = new global::System.Data.DataColumn("IDChitietHDXuat", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDChitietHDXuat);
                this.columnIDSanpham = new global::System.Data.DataColumn("IDSanpham", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDSanpham);
                this.columnTenSanPham = new global::System.Data.DataColumn("TenSanPham", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTenSanPham);
                this.columnDVT = new global::System.Data.DataColumn("DVT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDVT);
                this.columnSoluong = new global::System.Data.DataColumn("Soluong", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSoluong);
                this.columnGia = new global::System.Data.DataColumn("Gia", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGia);
                this.columnGiam = new global::System.Data.DataColumn("Giam", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGiam);
                this.columnThanhtien = new global::System.Data.DataColumn("Thanhtien", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThanhtien);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ChitietHDXuatRow NewChitietHDXuatRow() {
                return ((ChitietHDXuatRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ChitietHDXuatRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ChitietHDXuatRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ChitietHDXuatRowChanged != null)) {
                    this.ChitietHDXuatRowChanged(this, new ChitietHDXuatRowChangeEvent(((ChitietHDXuatRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ChitietHDXuatRowChanging != null)) {
                    this.ChitietHDXuatRowChanging(this, new ChitietHDXuatRowChangeEvent(((ChitietHDXuatRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ChitietHDXuatRowDeleted != null)) {
                    this.ChitietHDXuatRowDeleted(this, new ChitietHDXuatRowChangeEvent(((ChitietHDXuatRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ChitietHDXuatRowDeleting != null)) {
                    this.ChitietHDXuatRowDeleting(this, new ChitietHDXuatRowChangeEvent(((ChitietHDXuatRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveChitietHDXuatRow(ChitietHDXuatRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetTKHD ds = new DataSetTKHD();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ChitietHDXuatDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HeaderDataDataTable : global::System.Data.TypedTableBase<HeaderDataRow> {
            
            private global::System.Data.DataColumn columnFromDate;
            
            private global::System.Data.DataColumn columnToDate;
            
            private global::System.Data.DataColumn columnTenNV;
            
            private global::System.Data.DataColumn columnTenPhong;
            
            private global::System.Data.DataColumn columnPrintDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HeaderDataDataTable() {
                this.TableName = "HeaderData";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HeaderDataDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected HeaderDataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FromDateColumn {
                get {
                    return this.columnFromDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ToDateColumn {
                get {
                    return this.columnToDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TenNVColumn {
                get {
                    return this.columnTenNV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TenPhongColumn {
                get {
                    return this.columnTenPhong;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrintDateColumn {
                get {
                    return this.columnPrintDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HeaderDataRow this[int index] {
                get {
                    return ((HeaderDataRow)(this.Rows[index]));
                }
            }
            
            public event HeaderDataRowChangeEventHandler HeaderDataRowChanging;
            
            public event HeaderDataRowChangeEventHandler HeaderDataRowChanged;
            
            public event HeaderDataRowChangeEventHandler HeaderDataRowDeleting;
            
            public event HeaderDataRowChangeEventHandler HeaderDataRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddHeaderDataRow(HeaderDataRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HeaderDataRow AddHeaderDataRow(string FromDate, string ToDate, string TenNV, string TenPhong, string PrintDate) {
                HeaderDataRow rowHeaderDataRow = ((HeaderDataRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        FromDate,
                        ToDate,
                        TenNV,
                        TenPhong,
                        PrintDate};
                rowHeaderDataRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowHeaderDataRow);
                return rowHeaderDataRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                HeaderDataDataTable cln = ((HeaderDataDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new HeaderDataDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnFromDate = base.Columns["FromDate"];
                this.columnToDate = base.Columns["ToDate"];
                this.columnTenNV = base.Columns["TenNV"];
                this.columnTenPhong = base.Columns["TenPhong"];
                this.columnPrintDate = base.Columns["PrintDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnFromDate = new global::System.Data.DataColumn("FromDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFromDate);
                this.columnToDate = new global::System.Data.DataColumn("ToDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToDate);
                this.columnTenNV = new global::System.Data.DataColumn("TenNV", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTenNV);
                this.columnTenPhong = new global::System.Data.DataColumn("TenPhong", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTenPhong);
                this.columnPrintDate = new global::System.Data.DataColumn("PrintDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrintDate);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HeaderDataRow NewHeaderDataRow() {
                return ((HeaderDataRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new HeaderDataRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(HeaderDataRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.HeaderDataRowChanged != null)) {
                    this.HeaderDataRowChanged(this, new HeaderDataRowChangeEvent(((HeaderDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.HeaderDataRowChanging != null)) {
                    this.HeaderDataRowChanging(this, new HeaderDataRowChangeEvent(((HeaderDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.HeaderDataRowDeleted != null)) {
                    this.HeaderDataRowDeleted(this, new HeaderDataRowChangeEvent(((HeaderDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.HeaderDataRowDeleting != null)) {
                    this.HeaderDataRowDeleting(this, new HeaderDataRowChangeEvent(((HeaderDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveHeaderDataRow(HeaderDataRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetTKHD ds = new DataSetTKHD();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HeaderDataDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class HoadonXuatRow : global::System.Data.DataRow {
            
            private HoadonXuatDataTable tableHoadonXuat;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HoadonXuatRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableHoadonXuat = ((HoadonXuatDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IDHoadonXuat {
                get {
                    try {
                        return ((int)(this[this.tableHoadonXuat.IDHoadonXuatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IDHoadonXuat\' in table \'HoadonXuat\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHoadonXuat.IDHoadonXuatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Ngayxuat {
                get {
                    try {
                        return ((string)(this[this.tableHoadonXuat.NgayxuatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ngayxuat\' in table \'HoadonXuat\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHoadonXuat.NgayxuatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Ten {
                get {
                    try {
                        return ((string)(this[this.tableHoadonXuat.TenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ten\' in table \'HoadonXuat\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHoadonXuat.TenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Phuthu {
                get {
                    try {
                        return ((string)(this[this.tableHoadonXuat.PhuthuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Phuthu\' in table \'HoadonXuat\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHoadonXuat.PhuthuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TenPhong {
                get {
                    try {
                        return ((string)(this[this.tableHoadonXuat.TenPhongColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TenPhong\' in table \'HoadonXuat\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHoadonXuat.TenPhongColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GioBD {
                get {
                    try {
                        return ((string)(this[this.tableHoadonXuat.GioBDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GioBD\' in table \'HoadonXuat\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHoadonXuat.GioBDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GioKT {
                get {
                    try {
                        return ((string)(this[this.tableHoadonXuat.GioKTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GioKT\' in table \'HoadonXuat\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHoadonXuat.GioKTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Gia {
                get {
                    try {
                        return ((string)(this[this.tableHoadonXuat.GiaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Gia\' in table \'HoadonXuat\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHoadonXuat.GiaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Ghichu {
                get {
                    try {
                        return ((string)(this[this.tableHoadonXuat.GhichuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ghichu\' in table \'HoadonXuat\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHoadonXuat.GhichuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Giam {
                get {
                    try {
                        return ((string)(this[this.tableHoadonXuat.GiamColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Giam\' in table \'HoadonXuat\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHoadonXuat.GiamColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Thue {
                get {
                    try {
                        return ((string)(this[this.tableHoadonXuat.ThueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Thue\' in table \'HoadonXuat\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHoadonXuat.ThueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDHoadonXuatNull() {
                return this.IsNull(this.tableHoadonXuat.IDHoadonXuatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDHoadonXuatNull() {
                this[this.tableHoadonXuat.IDHoadonXuatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNgayxuatNull() {
                return this.IsNull(this.tableHoadonXuat.NgayxuatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNgayxuatNull() {
                this[this.tableHoadonXuat.NgayxuatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTenNull() {
                return this.IsNull(this.tableHoadonXuat.TenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTenNull() {
                this[this.tableHoadonXuat.TenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhuthuNull() {
                return this.IsNull(this.tableHoadonXuat.PhuthuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhuthuNull() {
                this[this.tableHoadonXuat.PhuthuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTenPhongNull() {
                return this.IsNull(this.tableHoadonXuat.TenPhongColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTenPhongNull() {
                this[this.tableHoadonXuat.TenPhongColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGioBDNull() {
                return this.IsNull(this.tableHoadonXuat.GioBDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGioBDNull() {
                this[this.tableHoadonXuat.GioBDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGioKTNull() {
                return this.IsNull(this.tableHoadonXuat.GioKTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGioKTNull() {
                this[this.tableHoadonXuat.GioKTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGiaNull() {
                return this.IsNull(this.tableHoadonXuat.GiaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGiaNull() {
                this[this.tableHoadonXuat.GiaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGhichuNull() {
                return this.IsNull(this.tableHoadonXuat.GhichuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGhichuNull() {
                this[this.tableHoadonXuat.GhichuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGiamNull() {
                return this.IsNull(this.tableHoadonXuat.GiamColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGiamNull() {
                this[this.tableHoadonXuat.GiamColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsThueNull() {
                return this.IsNull(this.tableHoadonXuat.ThueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetThueNull() {
                this[this.tableHoadonXuat.ThueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ChitietHDXuatRow[] GetChitietHDXuatRows() {
                if ((this.Table.ChildRelations["HoadonXuat_ChitietHDXuat"] == null)) {
                    return new ChitietHDXuatRow[0];
                }
                else {
                    return ((ChitietHDXuatRow[])(base.GetChildRows(this.Table.ChildRelations["HoadonXuat_ChitietHDXuat"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ChitietHDXuatRow : global::System.Data.DataRow {
            
            private ChitietHDXuatDataTable tableChitietHDXuat;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ChitietHDXuatRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableChitietHDXuat = ((ChitietHDXuatDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IDHoadonXuat {
                get {
                    try {
                        return ((int)(this[this.tableChitietHDXuat.IDHoadonXuatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IDHoadonXuat\' in table \'ChitietHDXuat\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChitietHDXuat.IDHoadonXuatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IDChitietHDXuat {
                get {
                    try {
                        return ((string)(this[this.tableChitietHDXuat.IDChitietHDXuatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IDChitietHDXuat\' in table \'ChitietHDXuat\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChitietHDXuat.IDChitietHDXuatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IDSanpham {
                get {
                    try {
                        return ((string)(this[this.tableChitietHDXuat.IDSanphamColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IDSanpham\' in table \'ChitietHDXuat\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChitietHDXuat.IDSanphamColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TenSanPham {
                get {
                    try {
                        return ((string)(this[this.tableChitietHDXuat.TenSanPhamColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TenSanPham\' in table \'ChitietHDXuat\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChitietHDXuat.TenSanPhamColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DVT {
                get {
                    try {
                        return ((string)(this[this.tableChitietHDXuat.DVTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DVT\' in table \'ChitietHDXuat\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChitietHDXuat.DVTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Soluong {
                get {
                    try {
                        return ((string)(this[this.tableChitietHDXuat.SoluongColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Soluong\' in table \'ChitietHDXuat\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChitietHDXuat.SoluongColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Gia {
                get {
                    try {
                        return ((string)(this[this.tableChitietHDXuat.GiaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Gia\' in table \'ChitietHDXuat\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChitietHDXuat.GiaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Giam {
                get {
                    try {
                        return ((string)(this[this.tableChitietHDXuat.GiamColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Giam\' in table \'ChitietHDXuat\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChitietHDXuat.GiamColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Thanhtien {
                get {
                    try {
                        return ((string)(this[this.tableChitietHDXuat.ThanhtienColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Thanhtien\' in table \'ChitietHDXuat\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChitietHDXuat.ThanhtienColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HoadonXuatRow HoadonXuatRow {
                get {
                    return ((HoadonXuatRow)(this.GetParentRow(this.Table.ParentRelations["HoadonXuat_ChitietHDXuat"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["HoadonXuat_ChitietHDXuat"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDHoadonXuatNull() {
                return this.IsNull(this.tableChitietHDXuat.IDHoadonXuatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDHoadonXuatNull() {
                this[this.tableChitietHDXuat.IDHoadonXuatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDChitietHDXuatNull() {
                return this.IsNull(this.tableChitietHDXuat.IDChitietHDXuatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDChitietHDXuatNull() {
                this[this.tableChitietHDXuat.IDChitietHDXuatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDSanphamNull() {
                return this.IsNull(this.tableChitietHDXuat.IDSanphamColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDSanphamNull() {
                this[this.tableChitietHDXuat.IDSanphamColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTenSanPhamNull() {
                return this.IsNull(this.tableChitietHDXuat.TenSanPhamColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTenSanPhamNull() {
                this[this.tableChitietHDXuat.TenSanPhamColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDVTNull() {
                return this.IsNull(this.tableChitietHDXuat.DVTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDVTNull() {
                this[this.tableChitietHDXuat.DVTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSoluongNull() {
                return this.IsNull(this.tableChitietHDXuat.SoluongColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSoluongNull() {
                this[this.tableChitietHDXuat.SoluongColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGiaNull() {
                return this.IsNull(this.tableChitietHDXuat.GiaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGiaNull() {
                this[this.tableChitietHDXuat.GiaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGiamNull() {
                return this.IsNull(this.tableChitietHDXuat.GiamColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGiamNull() {
                this[this.tableChitietHDXuat.GiamColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsThanhtienNull() {
                return this.IsNull(this.tableChitietHDXuat.ThanhtienColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetThanhtienNull() {
                this[this.tableChitietHDXuat.ThanhtienColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class HeaderDataRow : global::System.Data.DataRow {
            
            private HeaderDataDataTable tableHeaderData;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HeaderDataRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableHeaderData = ((HeaderDataDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FromDate {
                get {
                    try {
                        return ((string)(this[this.tableHeaderData.FromDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FromDate\' in table \'HeaderData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHeaderData.FromDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ToDate {
                get {
                    try {
                        return ((string)(this[this.tableHeaderData.ToDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ToDate\' in table \'HeaderData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHeaderData.ToDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TenNV {
                get {
                    try {
                        return ((string)(this[this.tableHeaderData.TenNVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TenNV\' in table \'HeaderData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHeaderData.TenNVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TenPhong {
                get {
                    try {
                        return ((string)(this[this.tableHeaderData.TenPhongColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TenPhong\' in table \'HeaderData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHeaderData.TenPhongColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PrintDate {
                get {
                    try {
                        return ((string)(this[this.tableHeaderData.PrintDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrintDate\' in table \'HeaderData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHeaderData.PrintDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFromDateNull() {
                return this.IsNull(this.tableHeaderData.FromDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFromDateNull() {
                this[this.tableHeaderData.FromDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsToDateNull() {
                return this.IsNull(this.tableHeaderData.ToDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetToDateNull() {
                this[this.tableHeaderData.ToDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTenNVNull() {
                return this.IsNull(this.tableHeaderData.TenNVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTenNVNull() {
                this[this.tableHeaderData.TenNVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTenPhongNull() {
                return this.IsNull(this.tableHeaderData.TenPhongColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTenPhongNull() {
                this[this.tableHeaderData.TenPhongColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrintDateNull() {
                return this.IsNull(this.tableHeaderData.PrintDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrintDateNull() {
                this[this.tableHeaderData.PrintDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class HoadonXuatRowChangeEvent : global::System.EventArgs {
            
            private HoadonXuatRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HoadonXuatRowChangeEvent(HoadonXuatRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HoadonXuatRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ChitietHDXuatRowChangeEvent : global::System.EventArgs {
            
            private ChitietHDXuatRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ChitietHDXuatRowChangeEvent(ChitietHDXuatRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ChitietHDXuatRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class HeaderDataRowChangeEvent : global::System.EventArgs {
            
            private HeaderDataRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HeaderDataRowChangeEvent(HeaderDataRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HeaderDataRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591